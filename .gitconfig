[alias]
  # log with pretty format similar to --pretty=oneline, but adds user + relative date
  lg = log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

  st = status -s

  dif = diff
  stat = diff --stat
  cache = diff --cached

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # shortcuts
  github ="!f() { git clone git@github.com:$1.git; }; f"
  bitbucket ="!f() { git clone git@bitbucket.org:$1.git; }; f"
  # multi-clone shortcuts
  hub ="!f() { for i in $@; do git github clux/$i; done; }; f"
  bb ="!f() { for i in $@; do git bitbucket clux/$i; done; }; f"

  pul = pull
  pulls = "!f() { git pull --recurse-submodules && git submodule update --init --recursive; }; f"
  ci = commit
  cia = commit -am
  amend = commit --amend -m
  ping = commit --allow-empty -m \"ping hooks\"
  uncommit = reset --soft HEAD^
  unstage = reset HEAD
  count = shortlog -sn

  setup = "!f() { [ -d ".git" ] || (git init && git add . && git commit --allow-empty -m 'init'); }; f"

  # Find commits by source code
  fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

  # Find commits by commit message
  fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

  # open changeset in browser - only tested with github+github enterprise (bitbucket needs commits/ url so breaks)
  open = "!f() { xdg-open \"https://$(echo $(git config --get remote.origin.url) | sed 's|^http.://||' | sed 's|^git@||' | tr : '/' | sed 's|.git$||')/commit/$1\"; }; f"

  # PR branch help - TODO: verify not on master
  yolo = !git add -A && git  commit --amend --no-edit && git push -f origin HEAD

[user]
  name = clux
  email = analsandblaster@gmail.com

[push]
  default = simple

[color "diff"]
  meta = yellow bold
  frag = magenta bold # line info
  old = red # deletions
  new = green # additions

[color "status"]
  added = yellow
  changed = green
  untracked = cyan
