format = """\
${status}\
${username}\
${hostname}\
${directory}\
${git_branch}\
${git_status}\
${rust}\
${python}\
${kubernetes}\
${custom.uim}\
${character}\
"""

add_newline = false
#right_format = """\
#[\ue0b6](fg:black black)\
#${cmd_duration}\
#"""

"$schema" = 'https://starship.rs/config-schema.json'

# This setup generally uses characters from powerline
# see https://github.com/ryanoasis/powerline-extra-symbols for codes

[character]
format = "[$symbol](bold) "
success_symbol = "[](fg:black black)"
error_symbol = "[](fg:black black)"
disabled = false

[username]
style_root = 'bg:black bold red'
style_user = 'bg:black yellow'
format = '[$user]($style)'

[status]
disabled = false
style = "bg:black red"
symbol = "✗" #"⏎"
format = "[$symbol]($style)"

[hostname]
ssh_only = true
style = 'bg:black bold dimmed green'
format = "[ $hostname ]($style)"

[rust]
disabled = true # MAYBE for later with a right_prompt
style = "bg:black 202"
format = "[ $symbol($version)]($style)"
version_format = "${minor}"
detect_extensions = []

[directory]
style = "bg:black white"
# regular format style
format = '[$path]($style)[$read_only]($read_only_style)'
# same, but if at repo
repo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style )[$read_only ]($read_only_style)'
repo_root_style = "bg:black bold white"
# before repo applies basically to the truncation symbol
before_repo_root_style = "bg:black blue"
read_only = "[\uf023]"
read_only_style = "bg:black red"
truncate_to_repo = true
#fish_style_pwd_dir_length = 3
# MISSING: cannot change the separator between dirs (looks cluttered)
# https://github.com/starship/starship/pull/1222
truncation_symbol = "…"
truncation_length = 5

[time]
disabled = true
style = "bg:black bold white"
format = "[$time]($style) "

[kubernetes]
symbol = "☸ " # dharmanetes > 󱃾
detect_folders = ["kube", ".kube", "tl", "controller"]
detect_files = ["Cargo.toml", "Chart.yaml"]
disabled = false
format = '[$symbol]($style)[$context[󰛢](bg:black 27)$namespace](bg:black white)'
contexts = [
  # NB: can also context_alias for more readability
  { context_pattern = ".*prod.*", style = "bg:black red" },
  { context_pattern = ".*", style = "bg:black 27" },
]

[git_branch]
style = "bg:black bold 38"
symbol = ' ' #󰳏/
format = "[$symbol]($style)[$branch](bg:black 38)"
truncation_length = 8
truncation_symbol = "."

[git_status]
disabled = false
format = '[ ${ahead}${behind}${modified}${conflicted}${stashed}${deleted}${renamed}${staged}${untracked}]($style)'
style = "bg:black 38"
conflicted = "🏳 "
ahead = "↑$count "
behind = "↓$count "
diverged = "⇕ "
untracked = "?" #…
stashed = "≡ "
modified = '+$count '
staged = "● "
renamed = "󱞸 "#
deleted = "󱡂 " #⚑
#up_to_date = "✔ "

[python]
symbol = ' ' #🐍
pyenv_version_name = true
pyenv_prefix = ''
style = "bg:black yellow"
format = '[${symbol}${pyenv_prefix}(${version} )($virtualenv )]($style)'

[line_break]
disabled = true

[cmd_duration]
disabled = true
min_time = 2_000
format = '[took $duration ]($style)'
style = 'bg:black bold yellow'

[custom.uim]
command = 'case $(cat ~/.uim.d/fep/getmode-${UIM_FEP_PID}) in; 1) echo -n "あ" ;; 2) echo -n "ア" ;; *) echo -n "ー" ;; esac'
when = ''' test -n "$UIM_FEP_PID" '''
style = "bg:black yellow"
format = '[ $output]($style)'
