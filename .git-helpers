#!/bin/bash

# -----------------------------------------------------------------------------
# aliases to avoid the space in gitconfig

alias g='git'
alias gl="git l"
alias gst="git st"
alias gs="git s"
alias gc="git c"
alias gcs="git c -S"
alias gdc="git dc"
alias gdcs="git dcs"
alias gd="git d"
alias gds="git ds"
alias gdm='git dm'
alias ga="git a"
alias gf="git f"
alias gu="git u"
alias gut="git ut"
alias gp="git p"
alias gpu="git pu"
alias gpr="git p --rebase"
alias gps="git ps"
alias gt='cd $(git rev-parse --show-toplevel)'
alias gm='git m'
alias gw='git whoami'
alias gws='git ws'
alias gblam='git blam'

# -----------------------------------------------------------------------------
# fuzzy helpers for aliases

# git commit browser
# based on https://gist.github.com/junegunn/f4fca918e937e6bf5bad#gistcomment-1666125
# F3 -> opens commit in browser (relies on "git open $changeset" alias)
# ENTER -> opens commit with "git show" (q to return)
# ESC in main to exit
# NB: relies on pager being set in .gitconfig!
gitlog() {
  git log --graph --color=always --no-merges \
      --format="%C(auto)%h%d %s <%C(blue)%an%Creset> %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "f3:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git open %') << 'FZF-EOF'
                {}
FZF-EOF" \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always %') << 'FZF-EOF'
                {}
FZF-EOF"
}


# git stash browser using fzf
# https://gist.github.com/junegunn/a563d9e3e07fd721d618562762ec619d
# kind of broken in zellij because it absorbs ctrl keys, should work elsewhere
gitstash() {
  local out k reflog
  # shellcheck disable=SC2207,SC2016
  out=(
    $(git stash list --pretty='%C(yellow)%gd %>(14)%Cgreen%cr %C(blue)%gs' |
      fzf --ansi --no-sort --header='enter:show, F3:diff, F4:pop, F5:apply, F6:drop' \
          --preview='git stash show --color=always -p $(cut -d" " -f1 <<< {}) | head -'$LINES \
          --preview-window=down:50% --reverse \
          --bind='enter:execute(git stash show --color=always -p $(cut -d" " -f1 <<< {}) > /dev/tty)' \
          --bind='F3:execute(git diff --color=always $(cut -d" " -f1 <<< {}) > /dev/tty)' \
          --expect=F4,F5,F6))
  k=${out[0]}
  reflog=${out[1]}
  [ -n "$reflog" ] && case "$k" in
    F4) git stash pop "$reflog" ;;
    F5) git stash apply "$reflog" ;;
    F6) git stash drop "$reflog" ;;
  esac
}

gitblame() {
  local -r file="${1:-$(fzf)}"
  git blame "${file}"
}

# -----------------------------------------------------------------------------
# git for loops to check mass statuses for repos in current dir

# usage glscommand "some command"
# glscommand "git master" -> shows default branches
glscommand() {
  local -r dirs=$(find . -maxdepth 1 -mindepth 1 -type "d")
  local -r command="$1"
  dir=$PWD
  for d in $dirs; do
    cd "$d" || false
    echo -en "$(tput setaf 33)${d:2} "
    if [[ -d .git ]]; then
      echo -en "$(tput setaf 136)$(${command})$(tput sgr0)"
    fi
    echo
    cd ..
  done
  cd "$dir" || true
}

# ls | git prompt
if [[ -z "${STARSHIP_SESSION_KEY}" ]]; then
  # re-uses a thing from the non-starship prompt
  # TODO: maybe import this fn here? it's style free.
  gls() { glscommand "show_git_differences" ;}
fi # awkward else case on mac; gls is gnu ls

# ls | git whoami
glsd() { glscommand "git whoami" ;}
