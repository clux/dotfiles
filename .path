#!/bin/bash

export PATH=$HOME/.cargo/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.node_modules/bin:$PATH
export PATH=$GOPATH/bin:$PATH
export PATH=$HOME/local/bin:$PATH

if [[ "${OSTYPE}" =~ "darwin" ]] ; then
  # No good way with brew to get coreutils installed without g prefix
  # even sources in /opt/homebrew/share/man/man1/g
  # or their roots in Cellar/coreutils/9.1/share/man/man1
  # have correct setups.
  #
  # we **can** extend PATH into specific pkgs, to unprefixed binaries.
  # but manpages are not always done right here.
  # e.g. we cannot type "man rm" no matter what, have to type "man grm"
  # TODO: look into installing coreutils with macports instead

  export PATH="/opt/homebrew/bin:$PATH"
  # single binaries: make, gnu-sed, gnu-tar, grep
  # alias back to what it should be, and only update MANPATH so docs are up-to-date
  export MANPATH="/opt/homebrew/opt/make/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/grep/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/gnu-tar/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/gnu-sed/libexec/man:$MANPATH"
  alias sed=gsed
  alias grep=ggrep
  alias sed=gsed
  alias make=gmake
  alias date=gdate
  alias rm=grm
  # binutils, findutils (more than one binary, so taking the whole thing)
  export PATH="/opt/homebrew/opt/binutils/bin:$PATH"
  export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
  # extra coreutils pkgs wo/evars: watch, diffutils
  # others: rsync, bash, gpatch, less, zsh

  alias ps=procs
  export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
  source "$HOME/.cargo/env"
fi
