#!/bin/bash

# -----------------------------------------------------------------------------
# PATH

export PATH=$HOME/.cargo/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.node_modules/bin:$PATH
export PATH=$GOPATH/bin:$PATH
export PATH=$HOME/local/bin:$PATH

if [[ "${OSTYPE}" =~ "darwin" ]] ; then
  # No good way with brew to get coreutils installed without g prefix
  # even sources in /opt/homebrew/share/man/man1/g
  # or their roots in Cellar/coreutils/9.1/share/man/man1
  # have correct setups.
  #
  # we **can** extend PATH into specific pkgs, to unprefixed binaries.
  # but manpages are not always done right here.
  # e.g. we cannot type "man rm" no matter what, have to type "man grm"
  # TODO: look into installing coreutils with macports instead

  eval "$(/opt/homebrew/bin/brew shellenv)"
  # single binaries: make, gnu-sed, gnu-tar, grep
  # alias back to what it should be, and only update MANPATH so docs are up-to-date
  export MANPATH="/opt/homebrew/opt/make/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/grep/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/gnu-tar/libexec/man:$MANPATH"
  export MANPATH="/opt/homebrew/opt/gnu-sed/libexec/man:$MANPATH"

  # binutils, findutils (more than one binary, so taking the whole thing)
  export PATH="/opt/homebrew/opt/binutils/bin:$PATH"
  export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
  # extra coreutils pkgs wo/evars: watch, diffutils
  # others: rsync, bash, gpatch, less, zsh

  # Misc darwin
  export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
fi

# -----------------------------------------------------------------------------
# misc

export EDITOR=hx;
export TERM="xterm-256color"

# generate dircolors via vivid
export LS_COLORS
# Nord meshes well with rose-pine alacritty theme
LS_COLORS="$(vivid generate nord)" # vivid theme
# https://github.com/sharkdp/vivid/tree/master/themes

# colored manpage theme through bat
# https://github.com/sharkdp/bat/tree/master/assets/themes
export MANPAGER="sh -c 'col -bx | bat -l man'"

# use shellcheck for current file only
export SHELLCHECK_OPTS="-e SC1091 -e SC1090"

# openkeychain compat
export PASSWORD_STORE_GPG_OPTS='--no-throw-keyids'

# fzf should ony show non-build files when browsing git repos
# Verify with echo $FZF_DEFAULT_COMMAND | sh | fzf
export FZF_DEFAULT_COMMAND='
  (git ls-tree -r --name-only HEAD ||
   find . -type f -print -o -type l -print |
      grep -vE "/target/|node_modules|bower_components|venv\/|.git/" |
      sed s/^..//) 2> /dev/null'
_FZF_LAYOUT='--height 50% --layout=reverse'
# fzf theme; catppuccin mocha: https://github.com/catppuccin/fzf but no bg
export FZF_DEFAULT_OPTS="${_FZF_LAYOUT} \
--color=spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

# Prefer GB English and use UTF-8
export LANG="en_GB.UTF-8"
export LC_ALL="en_GB.UTF-8"

# want short ctest results without having to type --output-on-failure (or -V always)
export CTEST_OUTPUT_ON_FAILURE=1
export GTEST_COLOR=1

# Always print rust backtraces
export RUST_BACKTRACE=1

# go
export GOPATH=$HOME/.go
export GO111MODULE=auto

# Download dir for `dl` + brotorr
export DOWNLOAD_DIR=~/Downloads
if [[ $HOSTNAME = kjttks ]]; then
  export DOWNLOAD_DIR=/media/gauss/DL
elif [[ $HOSTNAME = broxy ]]; then
  export DOWNLOAD_DIR=/media/dumptruck/DL
fi

# disable cowsay in ansible even though we have it installed
export ANSIBLE_NOCOWS=1

# disable analytics sending to homebrew
export HOMEBREW_NO_ANALYTICS=1
