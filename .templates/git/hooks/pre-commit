#!/usr/bin/env bash

FAIL=false

check() {
  FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E "$1$")

  [ -z "$FILES" ] && return 0;

  if ! hash "$2" 2>/dev/null; then
    echo -e "\e[1m$2\e[0m is not installed"
    FAIL=true
    return 1
  fi

  while read -r FILE; do
    "${@:2}" "$FILE" >/dev/null 2>&1
    if [ $? != 0 ]; then
      echo -e "\e[1m$2\e[0m reported errors in \e[3;31m$FILE\e[0m"
      FAIL=true
    fi
  done < <(echo "$FILES")
}

check_author() {
  if git remote -v | grep -q origin; then
    if [[ $(git remote get-url origin --push) == git@github.com-work:* ]]; then
      if [[ $(git whoami) != Eirik* ]]; then
        echo -e "You have not set your identity: use 'git ea'"
        exit 1
      fi
    fi
    if [[ $(git remote get-url origin --push) == git@github.com:clux* ]]; then
      if [[ $(git whoami) != clux* ]]; then
        echo -e "You have not set your identity: use 'git clux'"
        exit 1
      fi
    fi
  fi
}

# Ensure we don't commit with the wrong identity
check_author

# run all staged files through git diff --check
# catches whitespace errors and leftover conflict markers
check "*" git diff --check --cached --

# run all staged .json files through jq -e .
check "*.json" jq -e .

# run all staged .sh files through shellcheck
check "*.sh" shellcheck

if $FAIL; then
  echo "fix errors and try again or commit with --no-verify to ignore errors"
  exit 1
fi
